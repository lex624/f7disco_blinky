
f7disco_blinky.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000d8  080001f8  080001f8  000011f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002d0  080002d0  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002d0  080002d0  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  080002d0  080002d0  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002d0  080002d0  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002d0  080002d0  000012d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002d4  080002d4  000012d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  080002d8  00002000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000004  080002dc  00002004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080002dc  00002024  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 12 .debug_line   0000168e  00000000  00000000  00002032  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line_str 00000064  00000000  00000000  000036c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_info   00000ba9  00000000  00000000  00003724  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002ab  00000000  00000000  000042cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000001a0  00000000  00000000  00004578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0012d247  00000000  00000000  00004718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00000129  00000000  00000000  0013195f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  00000583  00000000  00000000  00131a88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0013200b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000004f8  00000000  00000000  00132050  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	@ (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	@ (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	@ (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000004 	.word	0x20000004
 8000214:	00000000 	.word	0x00000000
 8000218:	080002b8 	.word	0x080002b8

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	@ (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	@ (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000008 	.word	0x20000008
 8000234:	080002b8 	.word	0x080002b8

08000238 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000238:	e7fe      	b.n	8000238 <ADC_IRQHandler>

0800023a <Reset_Handler>:

//includes
#include "handler.hpp"


void  Reset_Handler(void) {
 800023a:	b480      	push	{r7}
 800023c:	af00      	add	r7, sp, #0
	while(1)	{}
 800023e:	bf00      	nop
 8000240:	e7fd      	b.n	800023e <Reset_Handler+0x4>

08000242 <NMI_Handler>:
}

void  NMI_Handler(void) {
 8000242:	b480      	push	{r7}
 8000244:	af00      	add	r7, sp, #0
	while(1)	{}
 8000246:	bf00      	nop
 8000248:	e7fd      	b.n	8000246 <NMI_Handler+0x4>

0800024a <HardFault_Handler>:
}

void  HardFault_Handler(void) {
 800024a:	b480      	push	{r7}
 800024c:	af00      	add	r7, sp, #0
	while(1)	{}
 800024e:	bf00      	nop
 8000250:	e7fd      	b.n	800024e <HardFault_Handler+0x4>

08000252 <MemManage_Handler>:
}

void  MemManage_Handler(void) {
 8000252:	b480      	push	{r7}
 8000254:	af00      	add	r7, sp, #0
	while(1)	{}
 8000256:	bf00      	nop
 8000258:	e7fd      	b.n	8000256 <MemManage_Handler+0x4>

0800025a <BusFault_Handler>:
}

void  BusFault_Handler(void) {
 800025a:	b480      	push	{r7}
 800025c:	af00      	add	r7, sp, #0
	while(1)	{}
 800025e:	bf00      	nop
 8000260:	e7fd      	b.n	800025e <BusFault_Handler+0x4>

08000262 <UsageFault_Handler>:
}

void  UsageFault_Handler(void) {
 8000262:	b480      	push	{r7}
 8000264:	af00      	add	r7, sp, #0
	while(1)	{}
 8000266:	bf00      	nop
 8000268:	e7fd      	b.n	8000266 <UsageFault_Handler+0x4>

0800026a <SVC_Handler>:
}

void  SVC_Handler(void) {
 800026a:	b480      	push	{r7}
 800026c:	af00      	add	r7, sp, #0
	while(1)	{}
 800026e:	bf00      	nop
 8000270:	e7fd      	b.n	800026e <SVC_Handler+0x4>

08000272 <DebugMon_Handler>:
}

void  DebugMon_Handler(void) {
 8000272:	b480      	push	{r7}
 8000274:	af00      	add	r7, sp, #0
	while(1)	{}
 8000276:	bf00      	nop
 8000278:	e7fd      	b.n	8000276 <DebugMon_Handler+0x4>

0800027a <PendSV_Handler>:
}

void  PendSV_Handler(void) {
 800027a:	b480      	push	{r7}
 800027c:	af00      	add	r7, sp, #0
	while(1)	{}
 800027e:	bf00      	nop
 8000280:	e7fd      	b.n	800027e <PendSV_Handler+0x4>

08000282 <SysTick_Handler>:
}

void  SysTick_Handler(void) {
 8000282:	b580      	push	{r7, lr}
 8000284:	af00      	add	r7, sp, #0
	HAL_IncTick();
 8000286:	f000 f803 	bl	8000290 <HAL_IncTick>
}
 800028a:	bf00      	nop
 800028c:	bd80      	pop	{r7, pc}
	...

08000290 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000290:	b480      	push	{r7}
 8000292:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000294:	4b06      	ldr	r3, [pc, #24]	@ (80002b0 <HAL_IncTick+0x20>)
 8000296:	781b      	ldrb	r3, [r3, #0]
 8000298:	461a      	mov	r2, r3
 800029a:	4b06      	ldr	r3, [pc, #24]	@ (80002b4 <HAL_IncTick+0x24>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4413      	add	r3, r2
 80002a0:	4a04      	ldr	r2, [pc, #16]	@ (80002b4 <HAL_IncTick+0x24>)
 80002a2:	6013      	str	r3, [r2, #0]
}
 80002a4:	bf00      	nop
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop
 80002b0:	20000000 	.word	0x20000000
 80002b4:	20000020 	.word	0x20000020

080002b8 <_init>:
 80002b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ba:	bf00      	nop
 80002bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002be:	bc08      	pop	{r3}
 80002c0:	469e      	mov	lr, r3
 80002c2:	4770      	bx	lr

080002c4 <_fini>:
 80002c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c6:	bf00      	nop
 80002c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ca:	bc08      	pop	{r3}
 80002cc:	469e      	mov	lr, r3
 80002ce:	4770      	bx	lr
